import test from "ava";
import { Zlib } from "./Zlib";

const decompressed: Buffer = Buffer.from([
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
]);
const compressed: Buffer = Buffer.from([
    0x78, 0x9c, 0xfb, 0xff, 0x9f, 0x54, 0x00, 0x00, 0xf6, 0x73, 0x31, 0xcf
]);

test("Deflate", async t => {
    // Deflate the compressible buffer
    const result: Buffer = await Zlib.Deflate(decompressed);
    t.deepEqual(result, compressed);
});

test("Inflate", async t => {
    // Deflate the compressible buffer
    const result: Buffer = await Zlib.Inflate(compressed);
    t.deepEqual(result, decompressed);
});
