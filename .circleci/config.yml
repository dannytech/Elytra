version: 2.1

orbs:
  node: circleci/node@5.1.0
  codecov: codecov/codecov@3.2.5

jobs:
  # run linting and automated tests
  test:
    docker:
      - image: cimg/node:lts
      - image: rethinkdb:latest

    environment:
      RDB_URI: rethinkdb://admin@localhost/test

    parallelism: 4

    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/node_modules
      - run:
          name: Create test results directory
          command: mkdir -p reports/
      - run:
          name: Check code style
          command: npm run lint:ci > reports/eslint.xml
      - run:
          name: Run tests
          command: npm run test:ci > reports/ava.xml
      - store_artifacts:
          path: coverage/
      - store_artifacts:
          path: reports/
      - store_test_results:
          path: reports/
      - codecov/upload

  # build a production bundle for deployment
  build:
    docker:
      - image: cimg/node:lts

    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/node_modules
      - run:
          name: Build the server
          command: npm run build:ci
      - run:
          name: Bundle the server
          command: tar czf dist.tar.gz dist/
      - store_artifacts:
          path: dist.tar.gz
      - persist_to_workspace:
          root: .
          paths:
            - dist/

  # create a Docker image for Elytra
  deploy:
    docker:
      - image: docker:git

    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - &docker_layers docker-{{ .Branch }}-{{checksum "Dockerfile"}}
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/elytra.tar | true
      - run:
          name: Build Docker image
          command: |
            docker build --cache-from=elytra -t elytra .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/elytra.tar elytra
      - save_cache:
          key: *docker_layers
          paths:
            - /cache/elytra.tar
      - run:
          name: Push Docker image
          environment:
            GITHUB_USERNAME: dannytech
          command: |
            docker login ghcr.io --username ${GITHUB_USERNAME} --password ${GITHUB_TOKEN}
            docker tag elytra "ghcr.io/${GITHUB_USERNAME}/elytra:${CIRCLE_TAG}"
            docker push "ghcr.io/${GITHUB_USERNAME}/elytra:${CIRCLE_TAG}"

workflows:
  main:
    jobs:
      - test
      - build:
          filters:
            branches:
              only: main
            tags:
              only: /.*/
      - deploy:
          requires:
            - test
            - build
          context:
            - ghcr
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
